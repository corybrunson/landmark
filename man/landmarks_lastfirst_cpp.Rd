% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{landmarks_lastfirst_cpp}
\alias{landmarks_lastfirst_cpp}
\title{Lastfirst in C++}
\usage{
landmarks_lastfirst_cpp(
  x,
  num = 0L,
  cardinality = 0L,
  seed_index = 1L,
  cover = FALSE
)
}
\arguments{
\item{x}{a data matrix}

\item{num}{desired number of landmark points, or number of sets, in a ball
cover (should be a positive integer)}

\item{cardinality}{desired cardinality of a cover set (should be a positive
integer)}

\item{seed_index}{index of the first landmark used to seed the algorithm}

\item{cover}{boolean specifying whether to return cover sets in addition to
the landmark points}
}
\description{
Use the Euclidean lastfirst procedure to choose landmarks.
}
\details{
\code{landmark_lastfirst()} performs the lastfirst procedure to choose a
given number landmarks for neighborhoods of at least a fixed cardinality.
It supports Euclidean distances only and provides an option to collect
covers.
}
\author{
Yara Skaf

Jason Cory Brunson
}
